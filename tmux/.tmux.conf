set -g default-shell $SHELL
set -g default-command $SHELL

# if-shell '[[ $(uname -s) = Linux ]]' {
# if-shell "uname | grep -q Linux"{
  # set -g default-terminal "xterm-256color"
  # set -sa terminal-overrides ',xterm-256color:Tc'
# }



# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 1

# Set the base index for windows and panes to 1 instead 0
set -g base-index 1
setw -g pane-base-index 1 # setw is set-window-option

# set -g default-terminal "${TERM}"
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
# set -g default-terminal "screen-256color"
# set -s default-terminal "tmux-256color"
# set -g default-terminal "xterm-256color"
#
set -ga terminal-overrides ",*:Tc" # this is for 256 color
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # this is for the cursor shape
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Automatically set window title
# set-window-option -g automatic-rename off
# set-option -g set-titles off
# recommended by neovim??? for 'focus-events'
# set-option -g focus-events on

#set -g default-terminal screen-256color
set -g status-keys vi
setw -g mode-keys vi

# enable activity alerts
setw -g monitor-activity off
setw -g visual-activity off

set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

### Key bindings
unbind C-b
set-option -g prefix 'C-space'
# Ensure that we can send C-a to other apps by pressing C-a twice
bind 'C-space' send-prefix
# reload config
bind r source-file ~/.tmux.conf \; display "Configuration reloaded!"
#
# fix home and end keys
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

## fix split panes / new windows to start in the current directory
bind '%' split-window -c '#{pane_current_path}' -h
bind '"' split-window -c '#{pane_current_path}'
bind '|' split-window -c '#{pane_current_path}' -h
bind '-' split-window -c '#{pane_current_path}'

bind c new-window -c '#{pane_current_path}'

# Move between pane with Prefix h,j,k,l
# Not using much when I have Navigation layer and holding space down,
# then press 'c' (mapped to prefix), and 'arrow' in the same layer
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

## the cmd key is setting in skhdrc
bind -N "âŒ˜+g lazygit" g new-window -c "#{pane_current_path}" -n "ðŸŒ³" "lazygit 2> /dev/null"
bind -N "âŒ˜+b build" b split-window -v -l 10 "make build; read"
bind -N "âŒ˜+d test" t split-window -v -l 10 "make test; read"

bind-key -r H 'resize-pane -L 5'
bind-key -r J 'resize-pane -D 5'
bind-key -r K 'resize-pane -U 5'
bind-key -r L 'resize-pane -R 5'

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

#Swapping Tmux windows
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

bind -n C-S-Tab switch-client -p
bind -n C-Tab switch-client -n

# bind C-c run "tmux save-buffer - | pbcopy -i -sel clipboard"
# bind C-v run "tmux set-buffer \"$(pbcopy -o -sel clipboard)\"; tmux paste-buffer"


# copy mode
# bind-key -T copy-mode-vi Y send-keys -X copy-selection
# bind-key -T copy-mode-vi y send-keys -X copy-selection

# in MacOS use pbcopy to copy to clipboard
# in Linux use xclip to copy to clipboard

unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi v send-keys -X begin-selection

bind Escape copy-mode
unbind p
bind p paste-buffer
set-option -g set-clipboard on


# NOTE: The Enter, y , Y keys are bind by the tmux-yank plugin
#
# # Bind Enter to copy the selection and cancel copy mode
if-shell "test $(uname) = Darwin" \
    "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy'" \
    "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -selection clipboard'"
#
# # Bind 'y' to copy the selection into clipboard
if-shell "test $(uname) = Darwin" \
    "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'" \
    "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"


# automatically copy when mouse is released
# bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy -in -selection clipboard"

# forget the find window. New session for selecting project
# bind-key f new-window -n sessionizer "~/.dotfiles/scripts/tmux-sessionizer"
bind-key -r f run-shell "tmux neww bash -c ~/.dotfiles/scripts/tmux-sessionizer"

# bind-key f new-session
# bind-key -r f run-shell "tmux neww fish -C '~/.dotfiles/scripts/tmux-sessionizer'"
bind-key -r i run-shell "tmux neww bash -c ~/.dotfiles/scripts/tmux-cht.sh"

# switch sessions keys bindings
bind-key b switch-client -l
bind-key -n M-s switch-client -l
bind n switch-client -n
bind-key -n M-n switch-client -n
bind p switch-client -p
bind-key -n M-p switch-client -p

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'
set -g @plugin 'tmux-plugins/tmux-yank'

# dracula customizations
# set -g @dracula-plugins "cpu-usage ram-usage battery time"
set -g @dracula-plugins "cpu-usage ram-usage time"
set -g @dracula-show-left-icon "#h> S:#S "
set -g @dracula-show-powerline true
set -g @dracula-show-fahrenheit false
set -g @dracula-show-location false
set -g @dracula-military-time true
set -g @dracula-show-timezone false
set -g @dracula-cpu-display-load false
set -g @dracula-show-flags true
# set -g status-position top

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "send-keys C-l"
