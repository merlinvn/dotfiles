#!/usr/bin/env sh

# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

# global settings
yabai -m config \
	mouse_follows_focus off \
	focus_follows_mouse off \
	window_origin_display default \
	window_placement second_child \
	window_zoom_persist on \
	window_shadow on \
	window_animation_duration 0.0 \
	window_animation_frame_rate 120 \
	window_opacity_duration 0.0 \
	active_window_opacity 1.0 \
	normal_window_opacity 0.90 \
	window_opacity off \
	insert_feedback_color 0xffd75f5f \
	split_ratio 0.50 \
	split_type auto \
	auto_balance on \
	top_padding 08 \
	bottom_padding 08 \
	left_padding 08 \
	right_padding 08 \
	window_gap 08 \
	layout bsp \
	mouse_modifier fn \
	mouse_action1 move \
	mouse_action2 resize \
	mouse_drop_action swap
#active_window_border_color   0xffF3F99D     \
#normal_window_border_color   0xff2E313D     \

# status bar
# on the main display
# yabai -m config external_bar main:26:0
# yabai -m config external_bar all:26:0

## Spaces Management
totalSpaces=9
nSpaces=$(yabai -m query --spaces | jq '.|length')
while [ $nSpaces -lt $totalSpaces ]; do
	yabai -m space --create
	nSpaces=$(expr $nSpaces + 1)
done

# yabai -m space 2 --label code
# yabai -m space 4 --label files
# yabai -m space 3 --label news
# yabai -m space 5 --label chat
# yabai -m space 6 --label free1
# yabai -m space 7 --label free2
# yabai -m space 8 --label free3
#
# yabai -m space main --display 1
# yabai -m space chat --display 2
# yabai -m space code --display 3
# yabai -m space term --display 3

yabai -m space 1 --layout float
yabai -m space 2 --layout stack
yabai -m space 3 --layout stack
yabai -m space 4 --layout stack
yabai -m space 5 --layout stack
yabai -m space 5 --layout stack
yabai -m space 6 --layout stack
yabai -m space 7 --layout stack
yabai -m space 8 --layout stack
yabai -m space 9 --layout float

yabai -m rule --add app=^Numi space=^1
yabai -m rule --add app=kitty space=^2
yabai -m rule --add app=WezTerm space=^2
yabai -m rule --add app=Alacritty space=^2
yabai -m rule --add app="^neovide" space=^4
yabai -m rule --add app="^Nova" space=^4
yabai -m rule --add app="^MacVim" space=^4
yabai -m rule --add app="^Safari" space=^3
yabai -m rule --add app="^Firefox" space=^3
yabai -m rule --add app="^Brave" space=^3
yabai -m rule --add app="Microsoft Edge" space=^3
yabai -m rule --add app=Code space=^4
yabai -m rule --add app=Spyder space=^4
yabai -m rule --add app="^Navicat" space=^4
yabai -m rule --add app="^Docker" space=^4
yabai -m rule --add app=Finder space=^5
yabai -m rule --add app="^Finder" title="^Copy" manage=off layer=above sticky=off
yabai -m rule --add app="Commander One" space=^5
yabai -m rule --add app=Mail space=^6
yabai -m rule --add app=Reeder space=^7
yabai -m rule --add app="^Acrobat" space=^7
yabai -m rule --add app="^Obsidian" space=^7
yabai -m rule --add app="^Telegram" space=^8
yabai -m rule --add app="^Discord" space=^8
yabai -m rule --add app="^calibre" space=^9
yabai -m rule --add app="^VLC" space=^9 grid=6:6:1:1:4:4
# yabai -m rule --add app="*" space=^1

#yabai -m rule --add app=".*" manage=off
yabai -m rule --add app="^System Settings$" sticky=on manage=off
yabai -m rule --add app="^System Preferences$" sticky=on manage=off
yabai -m rule --add app="^iStat Menus" sticky=on manage=off
yabai -m rule --add title=".*Preferences$" manage=off
yabai -m rule --add app="Raycast" manage=off
yabai -m rule --add app="^Automator" manage=off
yabai -m rule --add app="^System Information" manage=off
yabai -m rule --add app="^Installer" manage=off
yabai -m rule --add app="^YabaiIndicator" manage=off
yabai -m rule --add app="^Bartender" manage=off
yabai -m rule --add app="^Dozer" manage=off
yabai -m rule --add app="^Xee" manage=off
yabai -m rule --add app="^WireGuard" manage=off
yabai -m rule --add app="Commander One" title="File Info" manage=off
yabai -m rule --add app="^Commander One" title!="Quick Look" subrole="Quick Look" manage=off grid=12:12:1:1:10:10
# yabai -m rule --add app=".*" manage=off

#yabai -m rule --add app=kitty grid=1:1:0:0:1:1
# yabai -m rule --add app="^System Preferences$" manage=off
# yabai -m rule --add title="^Finder" manage=off

# focus window after active space changes
yabai -m signal --add event=space_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq '.[0].id')"

# focus window after active display changes
# yabai -m signal --add event=display_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq '.[0].id')"

yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

# signal yabai-indicator to refresh
yabai -m signal --add event=mission_control_exit action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=display_added action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=display_removed action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_created action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_destroyed action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_focused action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_moved action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_resized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_minimized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_deminimized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'

# signal yabai-indicator to refresh on space change keybinds
# echo "refresh" | nc -U /tmp/yabai-indicator.socket

##YABAI_CERT=yabai-cert sh -c "$(curl -fsSL "https://git.io/update-yabai")" &

echo "yabai configuration loaded.."
