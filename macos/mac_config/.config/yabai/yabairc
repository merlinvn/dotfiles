#!/usr/bin/env sh

# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

# global settings
yabai -m config                                 \
    mouse_follows_focus          off            \
    focus_follows_mouse          off            \
    window_origin_display        default        \
    window_zoom_persist          on             \
    window_topmost               off            \
    window_shadow                off            \
    window_animation_duration    0.0            \
    window_animation_frame_rate  10             \
    window_opacity               off            \
    window_border_width          3              \
    window_border_radius         0              \
    window_border_blur           off            \
    window_border_hidpi          on             \
    window_border                on
    #active_window_border_color   0xffF3F99D     \
    #normal_window_border_color   0xff2E313D     \

# global settings
yabai -m config window_placement             second_child
yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.9
yabai -m config active_window_border_color   0xff168aad
yabai -m config normal_window_border_color   0xff555555
yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 on
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  12
yabai -m config bottom_padding               12
yabai -m config left_padding                 12
yabai -m config right_padding                12
yabai -m config window_gap                   12

# status bar
# on the main display
# yabai -m config external_bar main:26:0
# yabai -m config external_bar all:26:0


## Spaces Management
totalSpaces=9
nSpaces=$(yabai -m query --spaces | jq '.|length')
while [ $nSpaces -lt $totalSpaces ]
do
  yabai -m space --create
  nSpaces=`expr $nSpaces + 1`
done


# yabai -m space 2 --label code
# yabai -m space 4 --label files
# yabai -m space 3 --label news
# yabai -m space 5 --label chat
# yabai -m space 6 --label free1
# yabai -m space 7 --label free2
# yabai -m space 8 --label free3
#
# yabai -m space main --display 1
# yabai -m space chat --display 2
# yabai -m space code --display 3
# yabai -m space term --display 3

yabai -m space 1 --layout float
yabai -m space 2 --layout stack
yabai -m space 4 --layout stack
yabai -m space 7 --layout stack
yabai -m space 8 --layout stack

yabai -m rule --add app=kitty space=^2
yabai -m rule --add app=WezTerm space=^2
yabai -m rule --add app=Safari space=^3
yabai -m rule --add app="Brave Browser" space=^3
yabai -m rule --add app="Microsoft Edge" space=^3
yabai -m rule --add app=Code space=^4
yabai -m rule --add app=Spyder space=^4
yabai -m rule --add app="^Navicat" space=^4
yabai -m rule --add app=Finder space=^5
yabai -m rule --add app="Commander One PRO" space=^5
yabai -m rule --add app=Mail space=^6
yabai -m rule --add app=Reeder space=^7
yabai -m rule --add app="^Acrobat" space=^7
yabai -m rule --add app="^Obsidian" space=^7
yabai -m rule --add app="^Telegram" space=^8
yabai -m rule --add app="^Discord" space=^8
yabai -m rule --add app="^VLC" space=^9

#yabai -m rule --add app=".*" manage=off
yabai -m rule --add app="^System Preferences$" sticky=on manage=off
yabai -m rule --add title=".*Preferences$" manage=off
yabai -m rule --add app="Raycast" manage=off
yabai -m rule --add app="^Automator" manage=off
yabai -m rule --add app="^System Information" manage=off
yabai -m rule --add app="^Installer" manage=off
yabai -m rule --add app="^YabaiIndicator" manage=off
yabai -m rule --add app="^Bartender" manage=off
yabai -m rule --add app="Commander One PRO" manage=off
yabai -m rule --add app="^Dozer" manage=off
yabai -m rule --add app="^Xee" manage=off
yabai -m rule --add app="^WireGuard" manage=off
#yabai -m rule --add app=kitty grid=1:1:0:0:1:1
# yabai -m rule --add app="^System Preferences$" manage=off
# yabai -m rule --add title="^Finder" manage=off

# focus window after active space changes
# yabai -m signal --add event=space_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq '.[0].id')"

# focus window after active display changes
# yabai -m signal --add event=display_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq '.[0].id')"

# signal yabai-indicator to refresh
yabai -m signal --add event=mission_control_exit action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=display_added action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=display_removed action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_created action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_destroyed action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_focused action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_moved action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_resized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_minimized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_deminimized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'

# signal yabai-indicator to refresh on space change keybinds
# echo "refresh" | nc -U /tmp/yabai-indicator.socket


##YABAI_CERT=yabai-cert sh -c "$(curl -fsSL "https://git.io/update-yabai")" &

echo "yabai configuration loaded.."
