;; See keymap/tutorial.kbd for a more complete tutorial

(defcfg
  input (device-file "/dev/input/by-id/usb-Apple_Inc._Apple_Internal_Keyboard___Trackpad_FM7631204TBG6LMA273-if01-event-kbd")
  output (uinput-sink "My KMonad Keyboard")

;;  cmp-seq ralt
;;  cmp-seq-delay 5
  fallthrough true
  allow-cmd true
)

(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft up
  lctl  lalt lmet           spc            rmet ralt left down rght
)

;; Below, I use `around' to compose `layer-toggle' with `fn' (instead
;; of using `layer-toggle' directly) so that the `fn' keypress
;; actually gets emitted. This matters when using an application that
;; can use `fn' as a modifier (like Emacs).

;; (defalias fn (around (layer-toggle function) fn))

(defalias
    met_a (tap-hold-next-release 200 a lmet)
    alt_s (tap-hold-next-release 200 s lalt)
    ctl_d (tap-hold-next-release 200 d lctl)
    sft_f (tap-hold-next-release 200 f lsft)

    sft_j (tap-hold-next-release 200 j rsft)
    ctl_k (tap-hold-next-release 200 k rctl)
    alt_l (tap-hold-next-release 200 l lalt)
    met_; (tap-hold-next-release 200 ; rmet)

    ctl_esc (tap-hold-next-release 200 esc lctl)

    snav  (tap-hold 200  spc (layer-toggle navigation))
    esc_num  (tap-hold 200 esc (layer-toggle numbers))

    syms (tap-hold 200 (layer-next symbols) (layer-toggle symbols))
    fns (tap-hold 200 (layer-next fn) (layer-toggle fn))

;;    sl (sticky-key 300 lsft)
;;    sr (sticky-key 300 rsft))
;;    slc (sticky-key 300 lctl)
;;    sla (sticky-key 300 lalt)
;;    slm (sticky-key 300 lmet)
;;    srm (sticky-key 300 rmet)
)

(deflayer default
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  @esc_num  @met_a   @alt_s   @ctl_d   @sft_f  _    _    @sft_j   @ctl_k   @alt_l   @met_;    _   _
  _   _    _    _    _    _    _    _    _    _    _    _    _
  _  _    _               @snav              @syms    @fns    _    _    _
)

(deflayer numbers
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    /    7    8    9    +    _    _    caps
  _    lmet lalt lctl lsft _    *    4    5    6    -    =   _
  _    _    _    _    _    _    0    1    2    3    .    ,   _
  _    _    _              _              _    _    _    _    _
)

(deflayer navigation
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    home up    end    _   _    _    _
  esc  lmet lalt lctl lsft _    _    left down right _    _   _
  _    _    _    _    _    _    _    pgdn  pgup _   _    _    _
  _    _    _              _              _    _    _    _    _
)


(deflayer symbols
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    {    }    _    _    _    _    _    _    _    _    _
  _    _    _    \(   \)    _    _    _    _    _    _    _    _
  _    _    _    [    ]    _    _    _    _    _    _    _    _
  _    _    _              _              _    _    _    _    _
)

(deflayer fn
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    f10    f7   f8   f9   _    _    _    _    _    _    _    _    _
  _    f11    f4   f5   f6   _    _   _    rsft rctl lalt rmet  _
  _    f12    f1   f2   f3   _    _    _    _    _    _    _    _
  _    _    _              _              _    _    _    _    _
)
